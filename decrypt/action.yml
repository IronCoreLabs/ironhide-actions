name: ironhide
description: Use ironhide to decrypt files
inputs:
  keys:
    description: Contents of ~/.iron/keys for the service account.
    required: true
  input:
    description: Name of file to decrypt.
    required: true
runs:
  using: composite
  steps:
  - name: Set up environment
    id: setup
    shell: bash
    run: |
      if [ -f ${{ runner.temp }}/ironhide ]; then
        echo "ironhide is already installed."
        echo "installed=true" >> "$GITHUB_OUTPUT"
        exit 0
      fi

      case ${{ runner.os }} in
        Linux)
          if ["${{ runner.arch }}" = "ARM64"]; then
            echo 'file_pattern=*aarch64-unknown-linux*' >> "$GITHUB_OUTPUT"
          else
            echo 'file_pattern=*linux-musl*' >> "$GITHUB_OUTPUT"
          fi
          ;;

        macOS)
          if ["${{ runner.arch }}" = "ARM64"]; then
            echo 'file_pattern=*aarch64-apple-darwin*' >> "$GITHUB_OUTPUT"
          else
            echo 'file_pattern=*x86_64-apple-darwin*' >> "$GITHUB_OUTPUT"
          fi
          ;;

        Windows)
          echo 'file_pattern=*windows-msvc*' >> "$GITHUB_OUTPUT"
          ;;

        *)
          echo "Unknown runner os `${{ runner.os }}`."
          exit 1
          ;;
      esac
  - name: Download ironhide release
    if: steps.setup.outputs.installed != 'true'
    uses: robinraju/release-downloader@v1.8
    with:
      repository: "IronCoreLabs/ironhide"
      fileName: ${{ steps.setup.outputs.file_pattern }}
      latest: true
      extract: true
      out-file-path: ironhide_download
  - name: Install ironhide
    if: steps.setup.outputs.installed != 'true'
    shell: bash
    run: |
      mv ironhide_download/${{ steps.setup.outputs.file_pattern }}/ironhide* ${{ runner.temp }}/ironhide
      rm -rf ironhide_download
      rm -rf typescript
      mkdir -p ~/.iron
      echo '${{ inputs.keys }}' > ~/.iron/keys
  - name: Decrypt file
    if: runner.os == 'Linux'
    # hack to get a tty in github so ironhide prints output
    shell: 'script -q -e -c "bash --noprofile --norc -eo pipefail {0}"'
    run: |
      ${{ runner.temp }}/ironhide file decrypt ${{ inputs.input }}
      echo 'Decryption of [${{ inputs.input }}] was successful!'
  - name: Decrypt file
    if: runner.os == 'macOS'
    # hack to get a tty in github so ironhide prints output
    shell: 'script -Fq /dev/null /bin/sh -c "bash --noprofile --norc -eo pipefail {0}"'
    run: |
      ${{ runner.temp }}/ironhide file decrypt ${{ inputs.input }}
      echo 'Decryption of [${{ inputs.input }}] was successful!'
  - name: Decrypt file
    if: runner.os == 'Windows'
    # we can't fake a tty on windows, so error output here is a bit worse
    shell: bash
    run: |
      ${{ runner.temp }}/ironhide file decrypt ${{ inputs.input }}
      echo 'Decryption of [${{ inputs.input }}] was successful!'
